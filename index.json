{
  "CHANGELOG.html": {
    "href": "CHANGELOG.html",
    "title": "Changelog | SnowflakeIDGenerator",
    "keywords": "Changelog 1.4 Added dependency injection helpers using Microsoft.Extensions.DependencyInjection. To avoid package dependency bloating, this was added to package SnowflakeIDGenerator.DependencyInjection Added class SnowflakeIdGeneratorOptions to Microsoft.Extensions.DependencyInjection to help with automatic initialization from configuration. 1.3.2023 Solved an issue that caused the custom epoch sometimes not being saved to the snowflake object. This does not affects the generated codes, but could make them to return the wrong date when parsed Comparisons should be between snowflakes using the same epoch Equality comparer returns false if the snowflakes being compared use different epochs 1.2.2023 Added ability to change and rebase epoch to an already generated code Added implicit casting from Snowflake to string and ulong Added explicit casting to Snowflake from string and ulong 1.1.2023 Added ability to use a custom epoch 1.0.2023 Throw exception if time moves backwards 1.0.2022 Initial version"
  },
  "README.html": {
    "href": "README.html",
    "title": "Snowflake Id Generator | SnowflakeIDGenerator",
    "keywords": "Snowflake Id Generator Generate unique identifiers based on Twitter's Snowflake ID. Parse a Snowflake to get information about it's creation. Snowflakes Usage Generate Using the SnowflakeIDGenerator class Using the SnowflakeIDGenerator class as static Using a non-standard date as epoch Parsing an Id The Snowflake object Changing Epoch on generated codes Snowflakes Snowflakes (or SnoflakeIds) are a form of generating identifiers used in distributed computing that, when used properly, guarantees uniqueness between systems, since one of it's components refers to the system creating the ID. The other components refer to the current date and time, in order not to keep track of a long running sequencer (for example, a sequence in a database), and a short (in memory) sequence, to allow the generation of several codes in a short amount of time. Image Source & credit available in wikimedia. \"instance\" in this image replaces machineId in the library / package Usage Generate There are 2 ways of using the generator: Using the SnowflakeIDGenerator class as a static class. Useful when generating a single code to avoid dealing with constructors and the scope of the generator object. Instantiating the SnowflakeIDGenerator class. Recommended if you plan to generate more than a few codes at the same time. On version 1.4.2024 and up you can use the interface ISnowflakeIDGenerator. If you prefer to use dependency injection, the package SnowflakeIDGenerator.DependencyInjection might be helpful. Using the SnowflakeIDGenerator class Instantiate class SnowflakeIDGenerator SnowflakeIDGenerator generator = new SnowflakeIDGenerator(machineId); where machineId is the number / identifier of the system currently trying to get an id Starting on version 1.1.2023 you can instruct the generator to use a custom date as epoch from which the timestamps are derived for the current date. SnowflakeIDGenerator generator = new SnowflakeIDGenerator(machineId, CustomEpoch); Using the generator object, there are 3 ways of obtaining the code: Call generator.GetSnowflake() to get a Snowflake object Call generator.GetCode() to get an Id in number (ulong) format Call generator.GetCodeString() to get an Id in string format Using the SnowflakeIDGenerator class as static If you only need to get a single Id, it's easier to just use the generator class as static. The method names are the same as when using the generator, except they need the machineId as parameter: Call SnowflakeIDGenerator.GetSnowflake(machineId) to get a Snowflake object Call SnowflakeIDGenerator.GetCode(machineId) to get an Id in number (ulong) format Call SnowflakeIDGenerator.GetCodeString(machineId) to get an Id in string format Using a non-standard date as epoch version 1.1.2023 and up The first component of the codes is the amount of milliseconds elapsed since a set point in time, called epoch. By default, the generator uses the unix epoch (jan-1-1970 12:00:00am) as starting point to count. Adding a DateTime object as an extra parameter when using the generator allows to change the zero value to be used to count milliseconds to. DateTime customEpoch = new DateTime(year: 2020, month: 1, day: 1, hour: 0, minute: 0, second: 0, DateTimeKind.Utc); // Creating the generator class SnowflakeIDGenerator generator = new SnowflakeIDGenerator(machineId, customEpoch); // This works when using as static too! SnowflakeIDGenerator.GetSnowflake(machineId, customEpoch) Parsing an Id Parse a Snowflake either from a string or a number (ulong) in order to get information regarding the generation, such as the time or the machine that generated the code. If a custom epoch was used when generating, that DateTime must be passed as second parameter when parsing in order to get the right generation date. string s = \"06975580616378931208\"; ulong n = 6975580821430984519ul; Snowflake fromString = Snowflake.Parse(s); var utcDateTimeFromString = fromString.UtcDateTime; // 13/9/2022 22:26:58 var timestampFromString = fromString.Timestamp; // 1663108018965 var machineIdFromString = fromString.MachineId; // 477 var sequenceFromString = fromString.Sequence; // 2056 Snowflake fromNumber = Snowflake.Parse(n); var utcDateTimeFromNumber = fromNumber.UtcDateTime; // 13/9/2022 22:27:47 var timestampFromNumber = fromNumber.Timestamp; // 1663108067853 var machineIdFromNumber = fromNumber.MachineId; // 701 var sequenceFromNumber = fromNumber.Sequence; // 3911 Additionally, starting on version 1.2.2023 you can cast a string or a number (ulong) directly into a Snowflake without using the Parse() method (only when using the default epoch). string s = \"06975580616378931208\"; ulong n = 6975580821430984519ul; Snowflake fromString = (Snowflake)s; var utcDateTimeFromString = fromString.UtcDateTime; // 13/9/2022 22:26:58 var timestampFromString = fromString.Timestamp; // 1663108018965 var machineIdFromString = fromString.MachineId; // 477 var sequenceFromString = fromString.Sequence; // 2056 Snowflake fromNumber = (Snowflake)n; var utcDateTimeFromNumber = fromNumber.UtcDateTime; // 13/9/2022 22:27:47 var timestampFromNumber = fromNumber.Timestamp; // 1663108067853 var machineIdFromNumber = fromNumber.MachineId; // 701 var sequenceFromNumber = fromNumber.Sequence; // 3911 The Snowflake object While the SnowflakeIDGenerator class keeps track of time, machine and sequence, a Snowflake object keeps track of the meaning of the code, and allows to extract information about said code. For example, as seen on the parsing an Id section, when working with a Snowflake object (either parsed or just generated), you can see some information. The available fields are: UtcDateTime: The creation date (UTC format) Timestamp and TimestampInt64 The timestamp component of the code. Amount of milliseconds since the configured epoch MachineId and MachineIdInt32: the machine / terminal / server that created the id Sequence and SequenceInt32: The sequencer. If greater than 0, multiple ids where generated withing the same millisecond Id: The Snowflake id in ulong format Code: The Snowflake id as String Changing Epoch on generated codes If you need to change the epoch on an already generated code, use ChangeEpoch() to change it keeping the same code but changing the represented date, or use RebaseEpoch() to keep the date but changing the final code."
  },
  "SnowflakeIDGenerator.DependencyInjection/README.html": {
    "href": "SnowflakeIDGenerator.DependencyInjection/README.html",
    "title": "Snowflake Id Generator | SnowflakeIDGenerator",
    "keywords": "Snowflake Id Generator Dependency injection This package extends package SnowflakeIDGenerator to help in configuring the snowflakeId generator using dependency injection Usage For example, if using ASP.net minimal api, use the following to register the generator using default values: var builder = WebApplication.CreateBuilder(args); builder.Services.AddSnowflakeIdGeneratorService(); Alternatively, the following will use custom values contained in appsettings.json builder.Services.AddSnowflakeIdGeneratorService(builder.Configuration.GetSection(\"SnowflakeIdGeneratorOptions\").Get<SnowflakeIdGeneratorOptions>()); { . . . \"SnowflakeIdGeneratorOptions\": { //Both parameters are optional \"MachineId\": 5, \"Epoch\": \"2023-12-25\" } } Either way will register the interface ISnowflakeIDGenerator to be use in your project. See an example in the Example directory."
  },
  "api/SnowflakeID.Exceptions.SnowflakesUsingDifferentEpochsException.html": {
    "href": "api/SnowflakeID.Exceptions.SnowflakesUsingDifferentEpochsException.html",
    "title": "Class SnowflakesUsingDifferentEpochsException | SnowflakeIDGenerator",
    "keywords": "Class SnowflakesUsingDifferentEpochsException Namespace SnowflakeID.Exceptions Assembly SnowflakeIDGenerator.dll When trying to compare Ids using different epochs [Serializable] public class SnowflakesUsingDifferentEpochsException : ArgumentException, ISerializable Inheritance object Exception SystemException ArgumentException SnowflakesUsingDifferentEpochsException Implements ISerializable Inherited Members ArgumentException.GetObjectData(SerializationInfo, StreamingContext) ArgumentException.Message ArgumentException.ParamName Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors SnowflakesUsingDifferentEpochsException() Initializes a new instance of the SnowflakesUsingDifferentEpochsException class. public SnowflakesUsingDifferentEpochsException() SnowflakesUsingDifferentEpochsException(SerializationInfo, StreamingContext) Initializes a new instance of the SnowflakesUsingDifferentEpochsException class with serialized data. protected SnowflakesUsingDifferentEpochsException(SerializationInfo serializationInfo, StreamingContext streamingContext) Parameters serializationInfo SerializationInfo The object that holds the serialized object data. streamingContext StreamingContext The contextual information about the source or destination. SnowflakesUsingDifferentEpochsException(string) Initializes a new instance of the SnowflakesUsingDifferentEpochsException class with a specified error message. public SnowflakesUsingDifferentEpochsException(string message) Parameters message string The error message that explains the reason for the exception. SnowflakesUsingDifferentEpochsException(string, Exception) Initializes a new instance of the SnowflakesUsingDifferentEpochsException class with a specified error message and a reference to the inner exception that is the cause of this exception. public SnowflakesUsingDifferentEpochsException(string message, Exception innerException) Parameters message string The error message that explains the reason for the exception. innerException Exception The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. SnowflakesUsingDifferentEpochsException(string, string) Initializes a new instance of the SnowflakesUsingDifferentEpochsException class with a specified error message and the name of the parameter that causes this exception. public SnowflakesUsingDifferentEpochsException(string message, string paramName) Parameters message string The error message that explains the reason for the exception. paramName string The name of the parameter that caused the current exception. SnowflakesUsingDifferentEpochsException(string, string, Exception) Initializes a new instance of the SnowflakesUsingDifferentEpochsException class with a specified error message, the parameter name, and a reference to the inner exception that is the cause of this exception. public SnowflakesUsingDifferentEpochsException(string message, string paramName, Exception innerException) Parameters message string The error message that explains the reason for the exception. paramName string The name of the parameter that caused the current exception. innerException Exception The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception. Fields DefaultMessage Default message public const string DefaultMessage = \"When comparing SnowflakeIds, both should be using the same epoch for the comparison to make sense.\" Field Value string"
  },
  "api/SnowflakeID.Exceptions.html": {
    "href": "api/SnowflakeID.Exceptions.html",
    "title": "Namespace SnowflakeID.Exceptions | SnowflakeIDGenerator",
    "keywords": "Namespace SnowflakeID.Exceptions Classes SnowflakesUsingDifferentEpochsException When trying to compare Ids using different epochs"
  },
  "api/SnowflakeID.Helpers.GlobalConstants.html": {
    "href": "api/SnowflakeID.Helpers.GlobalConstants.html",
    "title": "Class GlobalConstants | SnowflakeIDGenerator",
    "keywords": "Class GlobalConstants Namespace SnowflakeID.Helpers Assembly SnowflakeIDGenerator.dll Global constants. public static class GlobalConstants Inheritance object GlobalConstants Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields DefaultEpoch Default date used as epoch if not configured public static readonly DateTime DefaultEpoch Field Value DateTime"
  },
  "api/SnowflakeID.Helpers.html": {
    "href": "api/SnowflakeID.Helpers.html",
    "title": "Namespace SnowflakeID.Helpers | SnowflakeIDGenerator",
    "keywords": "Namespace SnowflakeID.Helpers Classes GlobalConstants Global constants."
  },
  "api/SnowflakeID.ISnowflakeIDGenerator.html": {
    "href": "api/SnowflakeID.ISnowflakeIDGenerator.html",
    "title": "Interface ISnowflakeIDGenerator | SnowflakeIDGenerator",
    "keywords": "Interface ISnowflakeIDGenerator Namespace SnowflakeID Assembly SnowflakeIDGenerator.dll Generator class for Snowflake. This keeps track of time, machine number and sequence. [CLSCompliant(false)] public interface ISnowflakeIDGenerator Properties ConfiguredEpoch Date configured as epoch for the generator DateTime ConfiguredEpoch { get; } Property Value DateTime ConfiguredMachineId Configured instance id for the generator int ConfiguredMachineId { get; } Property Value int Methods GetCode() Gets next Snowflake as number () ulong GetCode() Returns ulong GetCodeString() Gets next Snowflake as string GetCodeString() Returns string GetSnowflake() Gets next Snowflake id Snowflake GetSnowflake() Returns Snowflake"
  },
  "api/SnowflakeID.ISnowflakeIDGeneratorClsCompliant.html": {
    "href": "api/SnowflakeID.ISnowflakeIDGeneratorClsCompliant.html",
    "title": "Interface ISnowflakeIDGeneratorClsCompliant | SnowflakeIDGenerator",
    "keywords": "Interface ISnowflakeIDGeneratorClsCompliant Namespace SnowflakeID Assembly SnowflakeIDGenerator.dll Generator class for SnowflakeID. This keeps track of time, machine number and sequence. public interface ISnowflakeIDGeneratorClsCompliant Properties ConfiguredEpoch Date configured as epoch for the generator DateTime ConfiguredEpoch { get; } Property Value DateTime ConfiguredMachineId Configured instance id for the generator int ConfiguredMachineId { get; } Property Value int Methods GetCodeString() Gets next Snowflake as string GetCodeString() Returns string GetSnowflake() Gets next Snowflake id Snowflake GetSnowflake() Returns Snowflake"
  },
  "api/SnowflakeID.Snowflake.html": {
    "href": "api/SnowflakeID.Snowflake.html",
    "title": "Class Snowflake | SnowflakeIDGenerator",
    "keywords": "Class Snowflake Namespace SnowflakeID Assembly SnowflakeIDGenerator.dll This class represents the Snowflake object. Wikipedia article about SnowflakeId public class Snowflake : IEquatable<Snowflake>, IComparable<Snowflake>, IComparable Inheritance object Snowflake Implements IEquatable<Snowflake> IComparable<Snowflake> IComparable Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Snowflake() Class constructor using default epoch (UNIX time 1-1-1970) public Snowflake() Snowflake(DateTime) Class constructor using a custom date as epoch. public Snowflake(DateTime epoch) Parameters epoch DateTime Date to use as epoch Fields MaxMachineId Max number of machines / servers allowed. Range from 0 to MaxMachineId-1 public const long MaxMachineId = 1024 Field Value long MaxSequence The amount of codes generated per millisecond. Sequence value is set to 0 when this value is reached. public const long MaxSequence = 4096 Field Value long NumberOfDigits Total number of digits for the generated code public static readonly int NumberOfDigits Field Value int Properties Code Gets snowflakeId from string public string Code { get; } Property Value string Epoch Current epoch being used public DateTime Epoch { get; } Property Value DateTime Id Gets snowflakeId. [CLSCompliant(false)] public virtual ulong Id { get; } Property Value ulong MachineId Gets / Sets machine / server number [CLSCompliant(false)] public ulong MachineId { get; set; } Property Value ulong Exceptions ArgumentOutOfRangeException MachineIdInt32 Gets / Sets machine / server number public int MachineIdInt32 { get; set; } Property Value int Exceptions ArgumentOutOfRangeException Sequence Gets / Sets sequence [CLSCompliant(false)] public ulong Sequence { get; set; } Property Value ulong Exceptions ArgumentOutOfRangeException SequenceInt32 Gets / Sets machine / server number public int SequenceInt32 { get; set; } Property Value int Exceptions ArgumentOutOfRangeException Timestamp Gets / Sets timeStamp as number of milliseconds since selected epoch [CLSCompliant(false)] public ulong Timestamp { get; set; } Property Value ulong TimestampInt64 Gets / Sets timeStamp as number of milliseconds since selected epoch public long TimestampInt64 { get; set; } Property Value long Exceptions ArgumentOutOfRangeException UtcDateTime Sets the timeStamp portion of the snowflake based on current time and selected epoch. Gets real time of the snowflake based on selected epoch. public DateTime UtcDateTime { get; set; } Property Value DateTime Methods ChangeEpoch(DateTime) Changes the snowflake's epoch keeping the code intact. This changes the represented UtcDateTime. public void ChangeEpoch(DateTime newEpoch) Parameters newEpoch DateTime CompareTo(Snowflake) Implements of CompareTo(T) public int CompareTo(Snowflake other) Parameters other Snowflake Returns int Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case CompareTo(object) Implements of CompareTo(object) public int CompareTo(object obj) Parameters obj object Returns int Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case Equals(Snowflake) Checks equality between two SnowflakeId objects public virtual bool Equals(Snowflake other) Parameters other Snowflake Returns bool Equals(object) Checks equality between two SnowflakeId objects public override bool Equals(object obj) Parameters obj object Returns bool FromString(string) Explicit cast from string public static Snowflake FromString(string s) Parameters s string Returns Snowflake FromUInt64(ulong) Explicit cast from ulong [CLSCompliant(false)] public static Snowflake FromUInt64(ulong s) Parameters s ulong Returns Snowflake GetHashCode() Serves as the default hash function. Override of GetHashCode() public override int GetHashCode() Returns int Parse(string) Creates a SnowflakeId object from a SnowflakeId code public static Snowflake Parse(string s) Parameters s string Code Returns Snowflake Parse(string, DateTime) Creates a SnowflakeId object from a SnowflakeId code using a custom epoch public static Snowflake Parse(string s, DateTime customEpoch) Parameters s string Code customEpoch DateTime Date to use as epoch Returns Snowflake Parse(ulong) Creates a SnowflakeId object from a SnowflakeId code [CLSCompliant(false)] public static Snowflake Parse(ulong b) Parameters b ulong Code Returns Snowflake Parse(ulong, DateTime) Creates a SnowflakeId object from a SnowflakeId code using a custom epoch [CLSCompliant(false)] public static Snowflake Parse(ulong b, DateTime customEpoch) Parameters b ulong Code customEpoch DateTime Date to use as epoch Returns Snowflake RebaseEpoch(DateTime) Rebase the Snowflake to a new epoch CHANGING THE GENERATED CODE but keeping the same date and time. public void RebaseEpoch(DateTime newEpoch) Parameters newEpoch DateTime ToString() Gets code as string public override string ToString() Returns string SnowflakeId code ToUInt64() Implicit cast to ulong [CLSCompliant(false)] public ulong ToUInt64() Returns ulong Operators operator ==(Snowflake, Snowflake) Equality operator public static bool operator ==(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool explicit operator Snowflake(string) Explicit cast from string public static explicit operator Snowflake(string s) Parameters s string Returns Snowflake explicit operator Snowflake(ulong) Explicit cast from ulong [CLSCompliant(false)] public static explicit operator Snowflake(ulong s) Parameters s ulong Returns Snowflake operator >(Snowflake, Snowflake) Greater than operator public static bool operator >(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case operator >=(Snowflake, Snowflake) Greater than or equal to operator public static bool operator >=(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case implicit operator string(Snowflake) Implicit cast to string public static implicit operator string(Snowflake s) Parameters s Snowflake Returns string implicit operator ulong(Snowflake) Implicit cast to ulong [CLSCompliant(false)] public static implicit operator ulong(Snowflake s) Parameters s Snowflake Returns ulong operator !=(Snowflake, Snowflake) Inequality operator public static bool operator !=(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool operator <(Snowflake, Snowflake) Less than operator public static bool operator <(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case operator <=(Snowflake, Snowflake) Less than or equal to operator public static bool operator <=(Snowflake s1, Snowflake s2) Parameters s1 Snowflake s2 Snowflake Returns bool Exceptions SnowflakesUsingDifferentEpochsException When comparing ids generated using different epochs, since there's not an order in that case"
  },
  "api/SnowflakeID.SnowflakeIDGenerator.html": {
    "href": "api/SnowflakeID.SnowflakeIDGenerator.html",
    "title": "Class SnowflakeIDGenerator | SnowflakeIDGenerator",
    "keywords": "Class SnowflakeIDGenerator Namespace SnowflakeID Assembly SnowflakeIDGenerator.dll Generator class for SnowflakeID. This keeps track of time, machine number and sequence. public class SnowflakeIDGenerator : ISnowflakeIDGenerator, ISnowflakeIDGeneratorClsCompliant Inheritance object SnowflakeIDGenerator Implements ISnowflakeIDGenerator ISnowflakeIDGeneratorClsCompliant Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors SnowflakeIDGenerator(int) Creates a SnowflakeIDGenerator for a given machine number public SnowflakeIDGenerator(int machineId) Parameters machineId int Machine number Exceptions ArgumentOutOfRangeException machineId must be less than Snowflake.MaxMachineId SnowflakeIDGenerator(int, DateTime) Creates a SnowflakeIDGenerator for a given machine number using a custom date as epoch public SnowflakeIDGenerator(int machineId, DateTime customEpoch) Parameters machineId int Machine number customEpoch DateTime Date to use as epoch Exceptions ArgumentOutOfRangeException machineId must be less than Snowflake.MaxMachineId SnowflakeIDGenerator(ulong) Creates a SnowflakeIDGenerator for a given machine number [CLSCompliant(false)] public SnowflakeIDGenerator(ulong machineId) Parameters machineId ulong Machine number Exceptions ArgumentOutOfRangeException machineId must be less than Snowflake.MaxMachineId SnowflakeIDGenerator(ulong, DateTime) Creates a SnowflakeIDGenerator for a given machine number using a custom date as epoch [CLSCompliant(false)] public SnowflakeIDGenerator(ulong machineId, DateTime customEpoch) Parameters machineId ulong Machine number customEpoch DateTime Date to use as epoch Exceptions ArgumentOutOfRangeException machineId must be less than Snowflake.MaxMachineId Properties ConfiguredEpoch Date configured as epoch for the generator public DateTime ConfiguredEpoch { get; } Property Value DateTime ConfiguredMachineId Configured instance id for the generator public int ConfiguredMachineId { get; } Property Value int Methods GetCode() Gets next Snowflake as number () [CLSCompliant(false)] public ulong GetCode() Returns ulong GetCode(ulong) Static method Gets next Snowflake as for a given [CLSCompliant(false)] public static ulong GetCode(ulong machineId) Parameters machineId ulong Machine number Returns ulong GetCode(ulong, DateTime) Static method Gets next Snowflake as for a given using a custom date as epoch [CLSCompliant(false)] public static ulong GetCode(ulong machineId, DateTime customEpoch) Parameters machineId ulong Machine number customEpoch DateTime Date to use as epoch Returns ulong GetCodeString() Gets next Snowflake as public string GetCodeString() Returns string GetCodeString(int) Gets next Snowflake as for a given public static string GetCodeString(int machineId) Parameters machineId int Returns string GetCodeString(int, DateTime) Gets next Snowflake as for a given using a custom date as epoch public static string GetCodeString(int machineId, DateTime customEpoch) Parameters machineId int customEpoch DateTime Date to use as epoch Returns string GetCodeString(ulong) Gets next Snowflake as for a given [CLSCompliant(false)] public static string GetCodeString(ulong machineId) Parameters machineId ulong Returns string GetCodeString(ulong, DateTime) Gets next Snowflake as for a given using a custom date as epoch [CLSCompliant(false)] public static string GetCodeString(ulong machineId, DateTime customEpoch) Parameters machineId ulong customEpoch DateTime Date to use as epoch Returns string GetSnowflake() Gets next Snowflake id public Snowflake GetSnowflake() Returns Snowflake GetSnowflake(int) Static method Gets next Snowflake id for a given public static Snowflake GetSnowflake(int machineId) Parameters machineId int Machine number Returns Snowflake GetSnowflake(int, DateTime) Static method Gets next Snowflake id for a given using a custom date as epoch public static Snowflake GetSnowflake(int machineId, DateTime customEpoch) Parameters machineId int Machine number customEpoch DateTime Date to use as epoch Returns Snowflake GetSnowflake(ulong) Static method Gets next Snowflake id for a given [CLSCompliant(false)] public static Snowflake GetSnowflake(ulong machineId) Parameters machineId ulong Machine number Returns Snowflake GetSnowflake(ulong, DateTime) Static method Gets next Snowflake id for a given using a custom date as epoch [CLSCompliant(false)] public static Snowflake GetSnowflake(ulong machineId, DateTime customEpoch) Parameters machineId ulong Machine number customEpoch DateTime Date to use as epoch Returns Snowflake"
  },
  "api/SnowflakeID.SnowflakeIdGeneratorOptions.html": {
    "href": "api/SnowflakeID.SnowflakeIdGeneratorOptions.html",
    "title": "Class SnowflakeIdGeneratorOptions | SnowflakeIDGenerator",
    "keywords": "Class SnowflakeIdGeneratorOptions Namespace SnowflakeID Assembly SnowflakeIDGenerator.DependencyInjection.dll Option object for SnowflakeIDGenerator public class SnowflakeIdGeneratorOptions Inheritance object SnowflakeIdGeneratorOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Epoch String representing date to use as epoch Use this in options public string Epoch { get; set; } Property Value string MachineId Machine number public int MachineId { get; set; } Property Value int"
  },
  "api/SnowflakeID.SnowflakeIdGeneratorServiceCollectionExtensions.html": {
    "href": "api/SnowflakeID.SnowflakeIdGeneratorServiceCollectionExtensions.html",
    "title": "Class SnowflakeIdGeneratorServiceCollectionExtensions | SnowflakeIDGenerator",
    "keywords": "Class SnowflakeIdGeneratorServiceCollectionExtensions Namespace SnowflakeID Assembly SnowflakeIDGenerator.DependencyInjection.dll Extension method to register SnowflakeIDGenerator public static class SnowflakeIdGeneratorServiceCollectionExtensions Inheritance object SnowflakeIdGeneratorServiceCollectionExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddSnowflakeIdGeneratorService(IServiceCollection) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, SnowflakeIdGeneratorOptions) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, SnowflakeIdGeneratorOptions options) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. options SnowflakeIdGeneratorOptions Option object. Useful when obtaining from IConfigurationSection Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, int) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, int machineId) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. machineId int Machine number Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, int, DateTime) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, int machineId, DateTime customEpoch) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. machineId int Machine number customEpoch DateTime Date to use as epoch Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, long, DateTime) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, long machineId, DateTime customEpoch) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. machineId long Machine number customEpoch DateTime Date to use as epoch Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, ulong) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, ulong machineId) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. machineId ulong Machine number Returns IServiceCollection AddSnowflakeIdGeneratorService(IServiceCollection, ulong, DateTime) Registers a SnowflakeIDGenerator in ISnowflakeIDGenerator public static IServiceCollection AddSnowflakeIdGeneratorService(this IServiceCollection serviceCollection, ulong machineId, DateTime customEpoch) Parameters serviceCollection IServiceCollection The IServiceCollection to add services to. machineId ulong Machine number customEpoch DateTime Date to use as epoch Returns IServiceCollection"
  },
  "api/SnowflakeID.html": {
    "href": "api/SnowflakeID.html",
    "title": "Namespace SnowflakeID | SnowflakeIDGenerator",
    "keywords": "Namespace SnowflakeID Classes Snowflake This class represents the Snowflake object. Wikipedia article about SnowflakeId SnowflakeIDGenerator Generator class for SnowflakeID. This keeps track of time, machine number and sequence. SnowflakeIdGeneratorOptions Option object for SnowflakeIDGenerator SnowflakeIdGeneratorServiceCollectionExtensions Extension method to register SnowflakeIDGenerator Interfaces ISnowflakeIDGenerator Generator class for Snowflake. This keeps track of time, machine number and sequence. ISnowflakeIDGeneratorClsCompliant Generator class for SnowflakeID. This keeps track of time, machine number and sequence."
  },
  "index.html": {
    "href": "index.html",
    "title": "Snowflake Id Generator | SnowflakeIDGenerator",
    "keywords": "Snowflake Id Generator Generate unique identifiers based on Twitter's Snowflake ID. Parse a Snowflake to get information about it's creation. Package site Get on NuGet API"
  }
}